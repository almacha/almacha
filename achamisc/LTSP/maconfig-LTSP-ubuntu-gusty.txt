$Id: maconfig-LTSP-ubuntu-gusty.txt 304 2008-04-26 04:58:47Z almacha $

LTSP avec "fat clients".
Sans NIS, méthode stupide de fichier passwd dans le chroot.
Avec image compressée, exportée via NBD, et unionfs coté client.
Avec ubuntu gusty (sur serveur et clients).
===================================================================

Note : toutes les commandes sont à faire en tant que root.
(conseil : se faire un sudo -i)
Cette doc considère que vous savez administrer une machine
Debian, et que vous maitrisez le fonctionnement d'un chroot.
On suppose aussi que l'on utilise l'architechture i386
sur le serveur comme sur les clients.
Sécurité : Il faut éviter qu'on puisse accéder à tous les ports
du serveur depuis des machines non dignes de confiance
(par exemple depuis Internet).
Ports où des démons qui vont écouter sur le serveur :
111 portmap -> obligatoire
2049 nfs, et autres ports pour les divers lockd, rquotad, mountd et cie
     -> obligatoire
UDP 69 tftp -> obligatoire
9572 nbdswapd -> on peut le désactiver si pas besoin de swap
                 sur le réseau (c'est dans /etc/inetd.conf)
2000 nbdrootd -> obligatoire


Sur le serveur DHCP :
        next-server 192.168.97.4;
        if substring( option vendor-class-identifier, 0, 9 ) = "PXEClient" {
                filename "/ltsp/i386/pxelinux.0";
        } else {
                filename "/ltsp/i386/nbi.img";
        }
        option root-path "/opt/ltsp/i386";



Installer sur le serveur :
ltsp-server
nfs-kernel-server

Dans /etc/default/syslogd, pour voir les logs des clients
dans le syslog du serveur :
SYSLOGD="-r"

Dans /etc/syslogd.conf, ajouter à la fin,
pour avoir le log sur le tty12 de tous les clients et du serveur :
*.*	/dev/tty12

Et relancer syslogd :
/etc/init.d/sysklogd restart

Faire le home des clients :
  Sur un serveur idéal on aurait /export dans une partition séparée,
  de façon à
  1. empecher les clients de saturer le "/" serveur
  2. empecher les clients de remonter au dessus de /export,
     en faisant des paquets NFS3 illégaux en tirant profit
     du "no_subtree_check" (qui est là pour éviter
     les problèmes du "subtree_check" des FS montée en rw).
mkdir -p /export/home

Pour être bien secure, i.e. pour éviter que les users du
serveur aillent fouiller dans les dossiers des clients :
chmod 700 /export

Dans /etc/exports, pour le "home" des clients :
(adapter 192.168.XXX.0, le 97 est un exemple)
Il peut être intéressant de lister toutes les machines
si on utilise cette saleté de NAT qui fait que les machines
du monde extérieur "sembleraient" être sur le réseau local.
/export/home 192.168.97.0/24(rw,no_subtree_check,root_squash,sync)

Et relancer nfsd :
/etc/init.d/nfs-kernel-server restart

Exécuter (et attendre que ça finisse) :
ltsp-build-client

L'installation de console-setup dans le chroot et autres trucs du genre
va changer la police d'affichage et la keymap du *serveur*
(effet "parasite" de l'installation dans le chroot),
pour remédier à cela :
Rebooter le serveur.

Astuce facultative (mais ça peut sauver des vies !),
dans le chroot, dans /opt/ltsp/i386/root/.bashrc ajouter à la fin :
export PS1="(LTSP client) $PS1"

Installer dans le chroot (qui se trouve dans /opt/ltsp/i386) :
(il n'y a pas besoin de monter /proc ou quoi que ce soit d'autre
dans le chroot)
portmap
nfs-common
gdm
ubuntu-artwork

Dans /var/lib/tftpboot/ltsp/i386/lts.conf
(le créer s'il n'existe pas),
pour avoir le clavier en AZERTY sur les clients :
[default]
  CONSOLE_KEYMAP=fr

Puisqu'on utilise des "fat clients", on ne va pas
utiliser LDM, donc commenter le ligne suivante de /etc/inetd.conf :
9571 ...... /usr/sbin/ldminfod
On peut aussi commenter le nbdswapd si on veut pas de swap
des clients sur le serveur.

Relancer inetd :
/etc/init.d/openbsd-inetd restart

Pour voir ce qui se passe quand les clients bootent,
créer /opt/ltsp/i386/etc/ltsp/update-kernels.conf et y mettre
(il faudra peut-etre créer le dossier ltsp,
cette config la c'est pour les futurs kernels installés)
BOOTPROMPT_OPTS=" "
(oui il faut un " " car une chaine vide sera considérée
comme si l'option est pas définie, car le script fait
un if [ -z $BOOTPROMPT_OPTS ] then ...)
Ensuite, modifier /opt/ltsp/i386/boot/pxelinux.cfg/default
et retirer "quiet splash" de la fin (et ca c'est pour le
kernel déjà installé).

Dans le chroot, définir un mot de passe root :
passwd

Copier le sources.list du serveur vers le chroot :
cp /etc/apt/sources.list /opt/ltsp/i386/etc/apt/sources.list

Puis dans le chroot :
apt-get update

Et faire les mises à jour :
apt-get dist-upgrade

Note : Le package du kernel semble ne pas effacer le fichier
/boot/nbi.img-version et rale qu'il existe. Si dpkg rale que ce fichier
existe alors qu'il devrait pas, l'effacer et relancer la procédure.

Dans le chroot :
update-rc.d -f rc.local remove
update-rc.d rc.local start 99 2 3 4 5 .

Éditer ensuite /etc/rc.local du chroot pour y mettre (avant le exit 0) :
mount -t nfs -o rw,nosuid,nodev 192.168.97.4:/export/home /home

Dans le chroot, installer un desktop edubuntu :
apt-get install edubuntu-desktop

Dans le chroot, désactiver l'anacron
car ça n'a pas de sens d'exéctuer des taches de maintenance
dans la RAM...
TODO : voir comment faire proprement
PROPOSITION A TESTER : update-rc.d -f anacron remove

Reconstruire les kernels (exécuter dans l'environnement serveur
standard, pas dans le chroot) :
ltsp-update-kernels

Reconstruire l'image :
ltsp-update-image

Il n'y a plus qu'a booter les clients...

Pour créer de nouveaux utilisateurs :
(on ajoute ici un utilisateur "lapin")
chroot /opt/ltsp/i386 useradd -m lapin
chroot /opt/ltsp/i386 passwd lapin
mv /opt/ltsp/i386/home/lapin /export/home/

Pour effacer un utilisateur 
(on efface ici un utilisateur "lapin")
chroot /opt/ltsp/i386 userdel lapin
rm -rf /export/home/lapin

Et reconstruire l'image :
(Il faut que les cliens soient arretés pour faire cela)
ltsp-update-image


